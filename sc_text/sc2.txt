;

	var node_index = 0;
	var bps = 60 / 60.0;  // Beats per second

	inf.do({

		var weight = 0;
		var random;
		var accumulator;
		var node = node_list[node_index];
		var temp=node[0];
		//var freq = node[0].midicps;
		//var dur = node[1] / bps;
		var dur = node[3][node[3].size.rand] / bps;
		var paths = node[2];
		var amp = node[1];

		// Get total statistical weight of connected nodes
		(0 .. paths.size - 1).do {|i| weight = weight + paths[i][1]};

		// Generate random value for choosing next node
		random = weight.rand;

		// Choose next node based on statistical weights
		accumulator = paths[0][1];

		node_index = block {|break|
			paths.size.do {|i|
				if ((random < accumulator), {
					break.value(paths[i][0])
					}, {
						accumulator = accumulator + paths[i + 1][1]
				})
			}
		};
m = MIDIOut(0);

		// Play
		//Synth(\my_synth, [\dur, dur, \amp, -3.dbamp, \freq, freq]);
		//Synth(\my_synth, [\dur, dur, \amp, amp/127.0, \freq, freq]);
		temp=node[0];
		//temp.postln;
		temp.size.do{|i| m.noteOn(16,temp[i] , amp-10);};
		temp.postln;
		node[0].postln;
		//m.noteOn(16, node[0], amp-50);
		//m.noteOn(16, 13, amp-50);
		//dur.wait+0.1.rand-0.05;
		dur.wait+0.1.rand-0.05;
		//m.noteOff(16, 13, amp-50);
		temp.size.do{|i|m.noteOff(16,temp[i] , amp-50);};
	})
});

t.start;


);

////c
//node_list[2].postln;


//m = MIDIOut(3)
//
//

//m.allNotesOff(16);


