(
MIDIClient.init;
MIDIIn.connectAll;
//MIDIOut.connect[];

// Create task
t = Task({


	// Set attributes of each node
	// [freq, dur, [[next_state, weighted_random],ï¿½]]
	var node_list =[
[[88], 0.5 , 92 ,[[38,1]],[0.08]],
[[86], 0.5 , 92 ,[[1,1]],[0.08]],
[[84], 0.5 , 81.5385 ,[[15,3],[20,5],[31,2],[36,2],[56,1]],[0.08,0.08,0.08,0.08,0.13,0.08,0.08,0.08,0.13,0.08,0.08,0.13,0.08]],
[[83], 0.5 , 75 ,[[2,1]],[0.33]],
[[82], 0.5 , 79.25 ,[[5,3],[7,1]],[0.08,0.08,0.08,0.08]],
[[81], 0.5 , 84.3333 ,[[6,6],[11,1],[16,1],[18,1],[19,1],[23,1],[24,1],[41,2],[47,2],[55,1],[63,1],[65,1],[66,1],[69,2],[70,2]],[0.08,0.5,0.08,0.08,0.5,0.08,0.13,0.08,0.08,0.08,0.08,0.5,0.13,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.5]],
[[80], 0.5 , 84.3333 ,[[5,2],[6,4],[8,2],[63,2],[66,2]],[0.13,0.08,0.08,0.5,0.08,0.13,0.13,0.08,0.13,0.5,0.13,0.08]],
[[79], 0.5 , 81.8065 ,[[5,8],[8,12],[25,2],[36,4],[42,3],[46,2]],[0.08,0.08,0.5,0.5,0.08,0.5,0.08,0.08,0.08,0.5,0.08,0.08,0.08,0.08,0.08,0.12,0.13,0.5,0.08,0.08,0.08,0.08,0.08,0.13,0.13,0.08,0.13,0.08,0.08,0.08,0.08]],
[[78], 0.5 , 75.475 ,[[5,2],[6,2],[7,10],[9,10],[25,2],[35,2],[40,2],[46,2],[47,2],[51,1],[60,1],[63,2],[66,2]],[0.13,0.08,0.08,0.13,0.13,0.5,0.5,0.13,0.13,0.5,0.13,0.08,0.13,0.08,0.08,0.13,0.13,0.13,0.13,0.13,0.5,0.08,0.08,0.08,0.13,0.08,0.08,0.08,0.5,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08]],
[[76], 0.5 , 77.1563 ,[[8,2],[10,6],[25,2],[38,4],[40,2],[46,6],[49,1],[52,1],[53,1],[61,1],[63,1],[64,1],[65,2],[66,1],[71,1]],[0.13,0.13,0.08,0.08,0.08,0.08,0.13,0.08,0.13,0.08,0.08,0.08,0.38,0.08,0.08,0.25,0.08,0.08,0.5,0.08,0.42,0.25,0.08,0.12,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08]],
[[74], 0.5 , 82.6154 ,[[8,2],[9,6],[11,6],[12,4],[38,1],[50,1],[59,1],[67,2],[68,1],[70,2]],[0.13,0.08,0.08,0.13,0.08,0.5,0.13,0.13,0.5,0.08,0.13,0.5,0.08,0.5,0.13,0.13,0.13,0.08,0.08,0.08,0.5,0.13,0.08,0.08,0.08,0.08]],
[[73], 0.5 , 89.9231 ,[[10,2],[11,4],[13,1],[14,2],[50,1],[54,1],[68,2]],[0.5,0.5,0.5,0.08,0.13,0.13,0.13,0.13,0.5,0.08,0.13,0.5,0.08]],
[[72], 0.5 , 76.7647 ,[[21,1],[26,1],[27,1],[29,4],[30,4],[32,8],[33,2],[37,2],[39,3],[43,1],[44,2],[46,1],[53,3],[57,1]],[0.08,0.13,0.12,0.08,0.5,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.12,0.13,0.08,0.13,0.08,0.08,0.08,0.08,0.12,0.13,0.08,0.08,0.08,0.13,0.5,0.5,0.08,0.08,0.25,0.13]],
[[72,77], 0.5 , 75 ,[[56,1],[58,2]],[0.08,0.08,0.08]],
[[71], 0.5 , 89.6429 ,[[10,2],[11,2],[12,2],[16,2],[34,1],[50,1],[54,1],[62,1],[68,2]],[0.25,0.08,0.13,0.08,0.08,0.5,0.5,0.08,0.13,0.08,0.08,0.5,0.08,0.5]],
[[70], 0.5 , 73.375 ,[[2,1],[7,2],[16,9],[17,2],[18,2]],[0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08]],
[[69], 0.5 , 85.3333 ,[[7,1],[15,2],[16,1],[18,3],[22,1],[24,2],[27,1],[28,1],[40,1],[43,1],[45,5],[48,1],[54,1],[55,3],[62,1],[65,4],[68,1]],[0.5,0.13,0.08,0.5,0.08,0.5,0.08,0.08,0.12,0.08,0.13,0.5,0.08,0.08,0.08,0.12,0.13,0.08,0.08,0.13,0.13,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08]],
[[69,76], 0.5 , 81.1818 ,[[19,1],[24,4],[38,1],[55,3],[65,2]],[0.08,0.08,0.08,0.08,0.08,0.13,0.08,0.08,0.08,0.08,0.08]],
[[67], 0.5 , 79.0882 ,[[4,1],[14,2],[16,10],[17,6],[18,1],[46,7],[53,7]],[0.13,0.13,0.13,0.13,0.13,0.08,0.08,0.08,0.5,0.08,0.08,0.08,0.08,0.5,0.08,0.13,0.13,0.08,0.08,0.13,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.13,0.08,0.08,0.08,0.08]],
[[64], 0.5 , 83.5 ,[[7,1],[18,1]],[0.08,0.08]],
[[64,67], 0.5 , 88.6 ,[[1,1],[2,2],[7,2]],[0.08,0.08,0.5,0.08,0.08]],
[[62,66], 0.5 , 57 ,[[12,1]],[0.08]],
[[62,65], 0.5 , 45 ,[[15,1]],[0.08]],
[[62,65,69], 0.5 , 75 ,[[4,1]],[0.08]],
[[61], 0.5 , 79.8571 ,[[7,2],[16,1],[17,1],[18,2],[72,1]],[0.33,0.08,0.08,0.08,0.08,0.08,0.08]],
[[61,64], 0.5 , 57.8333 ,[[7,2],[8,2],[9,2]],[0.08,0.42,0.08,0.08,0.12,0.08]],
[[60,70], 0.5 , 92 ,[[10,1]],[0.13]],
[[60,67], 0.5 , 75 ,[[12,1],[15,1]],[0.08,0.08]],
[[60,65], 0.5 , 75 ,[[15,1]],[0.08]],
[[60,65,69], 0.5 , 86.5 ,[[14,2],[18,2],[29,2]],[0.08,0.08,0.08,0.5,0.13,0.5]],
[[60,64], 0.5 , 92.25 ,[[12,2],[18,2]],[0.5,0.08,0.08,0.5]],
[[60,64,69], 0.5 , 80.6667 ,[[3,1],[7,1],[31,1]],[0.25,0.08,0.08]],
[[60,64,67], 0.5 , 65.75 ,[[10,1],[12,3],[18,4]],[0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.33]],
[[60,62], 0.5 , 83.5 ,[[18,2]],[0.08,0.08]],
[[59,66], 0.5 , 127 ,[[18,1]],[0.08]],
[[59,62], 0.5 , 45.5 ,[[7,2]],[0.08,0.13]],
[[58], 0.5 , 80 ,[[2,5],[4,1]],[0.08,0.33,0.08,0.08,0.5,0.08]],
[[58,64,66], 0.5 , 75 ,[[12,1],[18,1]],[0.08,0.08]],
[[57], 0.5 , 64.2857 ,[[2,1],[8,4],[9,1],[17,1]],[0.25,0.08,0.12,0.08,0.08,0.08,0.13]],
[[57,62,66], 0.5 , 48.4 ,[[9,1],[12,1],[18,1],[39,2]],[0.08,0.08,0.08,0.12,0.08]],
[[57,61,64], 0.5 , 57.2 ,[[7,2],[9,1],[10,2]],[0.5,0.08,0.08,0.08,0.08]],
[[57,59,62], 0.5 , 48.75 ,[[9,2],[41,2]],[0.08,0.08,0.08,0.08]],
[[55,64], 0.5 , 92.3333 ,[[2,3]],[0.5,0.08,0.33]],
[[55,62], 0.5 , 86 ,[[15,2]],[0.08,0.5]],
[[55,60,66], 0.5 , 102.6667 ,[[9,1],[12,1],[44,1]],[0.13,0.38,0.38]],
[[55,60,65], 0.5 , 85.2 ,[[16,2],[18,3]],[0.08,0.08,0.5,0.08,0.08]],
[[55,60,64], 0.5 , 82.9444 ,[[7,2],[8,4],[9,2],[10,2],[12,8]],[0.13,0.13,0.08,0.5,0.08,0.13,0.08,0.12,0.08,0.08,0.12,0.08,0.08,0.12,0.08,0.08,0.08,0.08]],
[[55,60,62], 0.5 , 91.6667 ,[[7,2],[9,2],[47,2]],[0.5,0.13,0.13,0.08,0.08,0.08]],
[[55,59,65], 0.5 , 75 ,[[9,1]],[0.08]],
[[54,60], 0.5 , 82 ,[[12,1]],[0.13]],
[[54,59], 0.5 , 114.3333 ,[[10,2],[14,1]],[0.5,0.13,0.13]],
[[54,59,62], 0.5 , 105 ,[[10,1]],[0.5]],
[[54,57,60], 0.5 , 108 ,[[10,1]],[0.13]],
[[53], 0.5 , 82.7273 ,[[12,9],[15,2]],[0.5,0.08,0.08,0.08,0.08,0.08,0.13,0.08,0.25,0.08,0.08]],
[[53,59], 0.5 , 115.3333 ,[[10,1],[14,1],[16,1]],[0.08,0.5,0.08]],
[[52], 0.5 , 79.8571 ,[[7,1],[18,6]],[0.08,0.08,0.08,0.08,0.08,0.13,0.08]],
[[52,62], 0.5 , 83.5 ,[[4,1],[15,1]],[0.08,0.08]],
[[52,55], 0.5 , 75 ,[[15,1]],[0.08]],
[[52,55,62], 0.5 , 75 ,[[15,2]],[0.08,0.08]],
[[50], 0.5 , 45 ,[[9,1]],[0.08]],
[[50,57], 0.5 , 75 ,[[10,1]],[0.13]],
[[50,56], 0.5 , 75 ,[[10,1]],[0.12]],
[[50,55,57], 0.5 , 94.5 ,[[5,1],[18,1]],[0.08,0.08]],
[[49,54], 0.5 , 83.8333 ,[[5,3],[8,2],[9,1]],[0.13,0.08,0.08,0.5,0.13,0.13]],
[[48,55], 0.5 , 92 ,[[8,1]],[0.38]],
[[45], 0.5 , 82 ,[[5,1],[8,2],[13,2],[16,2],[17,1],[18,1]],[0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08]],
[[45,50], 0.5 , 75 ,[[5,3],[8,2],[9,1]],[0.5,0.12,0.13,0.13,0.5,0.08]],
[[43], 0.5 , 117.5 ,[[14,2]],[0.13,0.08]],
[[43,50], 0.5 , 75.5 ,[[10,3],[14,2],[16,1]],[0.13,0.5,0.13,0.08,0.5,0.13]],
[[42], 0.5 , 93.5 ,[[8,2]],[0.5,0.08]],
[[38], 0.5 , 81 ,[[8,2],[14,2]],[0.08,0.13,0.25,0.08]],
[[36,43], 0.5 , 127 ,[[8,1]],[0.08]],
];

	var node_index = 0;
	var bps = 60 / 60.0;  // Beats per second

	inf.do({

		var weight = 0;
		var random;
		var accumulator;
		var node = node_list[node_index];
		var temp=node[0];
		//var freq = node[0].midicps;
		//var dur = node[1] / bps;
		var dur = node[4][node[4].size.rand] / bps;
		var paths = node[3];
		var amp = node[2];

		// Get total statistical weight of connected nodes
		(0 .. paths.size - 1).do {|i| weight = weight + paths[i][1]};

		// Generate random value for choosing next node
		random = weight.rand;

		// Choose next node based on statistical weights
		accumulator = paths[0][1];

		node_index = block {|break|
			paths.size.do {|i|
				if ((random < accumulator), {
					break.value(paths[i][0])
					}, {
						accumulator = accumulator + paths[i + 1][1]
				})
			}
		};
m = MIDIOut(11);

		// Play
		//Synth(\my_synth, [\dur, dur, \amp, -3.dbamp, \freq, freq]);
		//Synth(\my_synth, [\dur, dur, \amp, amp/127.0, \freq, freq]);
		temp=node[0];
		//temp.postln;
		temp.size.do{|i| m.noteOn(16,temp[i] , amp-10);};
		temp.postln;
		node[0].postln;
		//m.noteOn(16, node[0], amp-50);
		//m.noteOn(16, 13, amp-50);
		//dur.wait+0.1.rand-0.05;
		dur.wait+0.1.rand-0.05;
		//m.noteOff(16, 13, amp-50);
		temp.size.do{|i|m.noteOff(16,temp[i] , amp-50);};
	})
});

t.start;


);

////c
//node_list[2].postln;


//m = MIDIOut(3)
//
//

//m.allNotesOff(16);


