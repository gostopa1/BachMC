(
MIDIClient.init;
MIDIIn.connectAll;
//MIDIOut.connect[];

// Create task
t = Task({


	// Set attributes of each node
	// [freq, dur, [[next_state, weighted_random],ï¿½]]
	var node_list =[
[[52], 0.5 , 95 ,[[10,18]],[0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14]],
[[47], 0.5 , 95 ,[[1,1],[3,1]],[0.07,0.07]],
[[46], 0.5 , 95 ,[[10,3],[14,3]],[0.07,0.07,0.07,0.07,0.07,0.07]],
[[45], 0.5 , 95 ,[[3,3],[4,1],[10,1]],[0.07,0.07,0.07,0.07,0.07]],
[[43], 0.5 , 95 ,[[4,2],[5,1],[13,1]],[0.07,0.07,0.07,0.07]],
[[41], 0.5 , 95 ,[[5,1],[11,1]],[0.07,0.07]],
[[40], 0.5 , 95 ,[[0,1],[3,1],[4,1],[6,27],[12,1]],[0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.14,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07]],
[[40,57], 0.5 , 95 ,[[6,1]],[0.14]],
[[40,52], 0.5 , 95 ,[[0,6],[6,1],[21,1]],[0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14]],
[[40,46], 0.5 , 95 ,[[2,3],[14,3]],[0.07,0.07,0.07,0.07,0.07,0.07]],
[[36], 0.5 , 95 ,[[0,6],[6,2],[8,7],[10,58],[11,1],[12,3],[14,20],[15,2],[16,1],[19,1],[22,1],[23,7]],[0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.14,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07]],
[[36,52], 0.5 , 95 ,[[0,1],[7,1],[11,1]],[0.14,0.14,0.07,0.07]],
[[36,49,52], 0.5 , 95 ,[[0,4]],[0.05,0.14,0.14,0.14]],
[[36,47], 0.5 , 95 ,[[1,1]],[0.07]],
[[36,46], 0.5 , 95 ,[[2,3],[9,6],[10,20]],[0.14,0.14,0.14,0.14,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07]],
[[36,46,49], 0.5 , 95 ,[[14,3]],[0.07,0.07,0.07]],
[[36,46,49,57], 0.5 , 95 ,[[10,2]],[0.14,0.07]],
[[36,45], 0.5 , 95 ,[[17,1],[18,1]],[0.07,0.07]],
[[36,43], 0.5 , 95 ,[[17,1],[18,3],[21,1]],[0.07,0.07,0.07,0.07,0.07]],
[[36,41], 0.5 , 95 ,[[20,1]],[0.07]],
[[36,41,46], 0.5 , 95 ,[[18,1]],[0.07]],
[[36,40], 0.5 , 95 ,[[15,1],[16,1],[21,3]],[0.14,0.07,0.07,0.07,0.07]],
[[36,40,52], 0.5 , 95 ,[[8,1]],[0.14]],
[[36,40,46], 0.5 , 95 ,[[10,7]],[0.14,0.07,0.07,0.07,0.07,0.07,0.07]]
];

	var node_index = 0;
	var bps = 60 / 60.0;  // Beats per second

	inf.do({

		var weight = 0;
		var random;
		var accumulator;
		var node = node_list[node_index];
		var temp=node[0];
		//var freq = node[0].midicps;
		//var dur = node[1] / bps;
		var dur = node[4][node[4].size.rand] / bps;
		var paths = node[3];
		var amp = node[2];

		// Get total statistical weight of connected nodes
		(0 .. paths.size - 1).do {|i| weight = weight + paths[i][1]};

		// Generate random value for choosing next node
		random = weight.rand;

		// Choose next node based on statistical weights
		accumulator = paths[0][1];

		node_index = block {|break|
			paths.size.do {|i|
				if ((random < accumulator), {
					break.value(paths[i][0])
					}, {
						accumulator = accumulator + paths[i + 1][1]
				})
			}
		};
m = MIDIOut(10);

		// Play
		//Synth(\my_synth, [\dur, dur, \amp, -3.dbamp, \freq, freq]);
		//Synth(\my_synth, [\dur, dur, \amp, amp/127.0, \freq, freq]);
		temp=node[0];
		//temp.postln;
		temp.size.do{|i| m.noteOn(16,temp[i] , amp-10);};
		temp.postln;
		node[0].postln;
		//m.noteOn(16, node[0], amp-50);
		//m.noteOn(16, 13, amp-50);
		//dur.wait+0.1.rand-0.05;
		dur.wait+0.1.rand-0.05;
		//m.noteOff(16, 13, amp-50);
		temp.size.do{|i|m.noteOff(16,temp[i] , amp-50);};
	})
});

t.start;


);

////c
//node_list[2].postln;


//m = MIDIOut(3)
//
//
a=MIDIClient.destinations;
a[11]
//m.allNotesOff(16);


